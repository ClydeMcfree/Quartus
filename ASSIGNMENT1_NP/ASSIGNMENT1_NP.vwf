/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000.0;
	SIMULATION_TIME = 20000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("D_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("E_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("F_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("G_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LEDA_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDB_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDC_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDD_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDDECIMAL_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDE_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDF_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDG_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RST_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("HEX")
{
	MEMBERS = "D_Y", "E_Y", "F_Y", "G_Y";
}

TRANSITION_LIST("D_Y")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("E_Y")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("F_Y")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("G_Y")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("LEDA_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.3;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2005.3;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4999.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 999.5;
		LEVEL 0 FOR 1000.5;
		LEVEL 1 FOR 999.5;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 994.7;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1969.7;
	}
}

TRANSITION_LIST("LEDB_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5035.6;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 0.1;
		LEVEL 1 FOR 999.9;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 2999.9;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 0.3;
		LEVEL 1 FOR 999.7;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.3;
		LEVEL 0 FOR 3964.1;
	}
}

TRANSITION_LIST("LEDC_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2036.0;
		LEVEL 1 FOR 997.3;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2.6;
		LEVEL 0 FOR 3992.5;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 4000.2;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 999.8;
		LEVEL 1 FOR 1999.9;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 997.3;
		LEVEL 0 FOR 966.7;
	}
}

TRANSITION_LIST("LEDD_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1034.7;
		LEVEL 1 FOR 999.9;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.1;
		LEVEL 0 FOR 999.9;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 999.9;
		LEVEL 0 FOR 1000.1;
		LEVEL 1 FOR 999.9;
		LEVEL 0 FOR 0.1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 999.9;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 1999.9;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 999.9;
		LEVEL 0 FOR 1000.1;
		LEVEL 1 FOR 999.9;
		LEVEL 0 FOR 1965.4;
	}
}

TRANSITION_LIST("LEDDECIMAL_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("LEDE_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1034.1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 999.7;
		LEVEL 0 FOR 1000.3;
		LEVEL 1 FOR 999.8;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 3999.7;
		LEVEL 1 FOR 0.3;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 965.9;
	}
}

TRANSITION_LIST("LEDF_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1034.1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1999.8;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 999.7;
		LEVEL 0 FOR 0.1;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 999.8;
		LEVEL 0 FOR 1999.9;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 1000.2;
		LEVEL 1 FOR 2965.9;
	}
}

TRANSITION_LIST("LEDG_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2034.5;
		LEVEL 0 FOR 3999.9;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 999.7;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 3999.9;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2999.7;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 0.3;
		LEVEL 1 FOR 1999.8;
		LEVEL 0 FOR 1965.5;
	}
}

TRANSITION_LIST("RST_Y")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "HEX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "D_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "E_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "F_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "G_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDA_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDB_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDC_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDD_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDE_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDF_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDG_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDDECIMAL_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RST_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 20000;
	MASTER = TRUE;
}
;
